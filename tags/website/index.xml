<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>website on 老胡的星辰随笔</title>
    <link>https://hujian.xyz/tags/website/</link>
    <description>Recent content in website on 老胡的星辰随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Mar 2023 16:19:04 +0800</lastBuildDate><atom:link href="https://hujian.xyz/tags/website/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用aws-cloudfront做CDN转发</title>
      <link>https://hujian.xyz/posts/%E4%BD%BF%E7%94%A8aws-cloudfront%E5%81%9Acdn%E8%BD%AC%E5%8F%91/</link>
      <pubDate>Mon, 20 Mar 2023 16:19:04 +0800</pubDate>
      
      <guid>https://hujian.xyz/posts/%E4%BD%BF%E7%94%A8aws-cloudfront%E5%81%9Acdn%E8%BD%AC%E5%8F%91/</guid>
      <description>CND转发到v2ray服务 环境:
域名一个 aws cloudfront服务 数据转发流程 A.example.com-&amp;gt;cloudfront-&amp;gt;B.example.com-&amp;gt;ip.ec2.port 注意事项 踩过的坑： v2ray-plugin报错 http: TLS handshake error from 64.252.173.97:23912: read tcp 172.21.0.3:443-&amp;gt;64.252.173.97:23912: read: connection reset by peer 原因为2层(EC2,cloudfront)TLS证书不一致; 第一个想法就是将两个证书整成一致，然后cloudfront就上传&amp;quot;Let&amp;rsquo;s Encrypt自签的证书，发现使用自上传的证书cloudfront根本不转发数据了;得出一个结论:cloudfront必须使用它请求生成的tls证书； 解决方案：A.example.com-&amp;gt;cloudfront-&amp;gt;ip.ec2.port转发流程修改为A.example.com-&amp;gt;cloudfront-&amp;gt;B.example.com-&amp;gt;ip.ec2.port v2ray-plugin报错not found in &#39;Sec-Websocket-Version&#39; header 1 cloudfront ws一直是v2ray.com/core/transport/internet/websocket: failed to convert to WebSocket connection &amp;gt; websocket: unsupported version: 13 not found in &amp;#39;Sec-Websocket-Version&amp;#39; header 原因是cloudfront没有配置转发HTTP请求头,CloudFront 预设并不会转发所有的 HTTP request headers， 有些 request headers 在经过 CloudFront 之后就被丟掉了导致 v2ray 无法识别到必要的数据。 需要更改 origin request policies 為 Managed-AllViewer，這樣它才會轉發所有的 headers。 - 解决方案：cloudfront设置源请求策略为```Managed-AllViewer```cloudfront转发数据到源失败，解决方法是需要更改行为策略-&amp;gt;缓存策略名称(Managed-CachingDisabled)-&amp;gt;源请求策略名称(Managed-AllViewerExceptHostHeader) 源服务器没有接收到数据,错误的提示： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 root@localhost ~ # curl -v https://proxy.</description>
    </item>
    
    <item>
      <title>使用cloudflare转发ssh端口</title>
      <link>https://hujian.xyz/posts/%E4%BD%BF%E7%94%A8cloudflare%E8%BD%AC%E5%8F%91ssh%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Thu, 21 Jul 2022 16:19:04 +0800</pubDate>
      
      <guid>https://hujian.xyz/posts/%E4%BD%BF%E7%94%A8cloudflare%E8%BD%AC%E5%8F%91ssh%E7%AB%AF%E5%8F%A3/</guid>
      <description>Cloudflare Tunnel cloudflare 提供的免费加密通道，通过 cloudflare 的 cnd 访问部署在内网的服务，比如 web,ssh,smb,tcp 等。 其工作方式类似于 frp，可以将本地服务发布到公网。只不过 frp 所需的服务器 IP 在 Cloudflare Tunnel 中变成了 Cloudflare 提供的节点。 相比于 frp 省去了服务器的成本。
1.准备 1.1 先决条件 必须需要一个 cloudflare 账号，以及开通 cloudflare zero trust。 cloudflare：https://www.cloudflare.com/ zero trust: https://one.dash.cloudflare.com/ 在你的需要内网穿透的设备上安装 cloudflared（cf 的本地 cli 客户端）
ubuntu/centos amd64架构 curl -L &#39;https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64&#39; -o /usr/bin/cloudflared &amp;amp;&amp;amp; chmod +x /usr/bin/cloudflared arm64 curl -L &#39;https://github.</description>
    </item>
    
    <item>
      <title>cn博客添加音乐组件</title>
      <link>https://hujian.xyz/posts/%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE/</link>
      <pubDate>Sat, 21 May 2022 16:19:04 +0800</pubDate>
      
      <guid>https://hujian.xyz/posts/%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE/</guid>
      <description>1. 博客底部添加音乐组件 音乐效果
1.1 直接上代码示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 &amp;lt;!-- 为博客底部添加音乐组件 --&amp;gt; &amp;lt;div id=&amp;#34;player&amp;#34; class=&amp;#34;aplayer&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;link href=&amp;#34;https://files.cnblogs.com/files/shwee/APlayer.min_v1.10.1.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://files.</description>
    </item>
    
    <item>
      <title>生成HTTPS证书</title>
      <link>https://hujian.xyz/posts/%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Mon, 21 Mar 2022 16:19:04 +0800</pubDate>
      
      <guid>https://hujian.xyz/posts/%E7%94%9F%E6%88%90https%E8%AF%81%E4%B9%A6/</guid>
      <description>生成HTTPS证书 1. 使用loge命令的方式生成HTTPS证书 参数说明：
*.domain.com 替换为你的域名，支持所有子域名 &amp;ndash; dns 是指域名在哪个云厂商，支持的云厂商有alidns/cloudflare aws;详细参考github官方文档 CLOUDFLARE_EMAIL=&amp;#34;xx@gmail.com&amp;#34; \CLOUDFLARE_API_KEY=&amp;#34;xxx&amp;#34; \lego --email &amp;#34;xx@gmail.com&amp;#34; --dns cloudflare --domains &amp;#34;*.domain.com&amp;#34; run 2 使用certbot的方式生成HTTPS证书 xx.domain.com 替换为你指定的子域名，只支持单个子域名
sudo certbot certonly --agree-tos --email xx@gmail.com --webroot -w /var/lib/letsencrypt/ -d xx.domain.com 3.检查HTTPS证书是否生效 cfssl-certinfo -domain xx.domain.com:443 4 参考文档： 使用certbot的方式生成HTTPS证书 使用lego手动生成tls证书参数文档 </description>
    </item>
    
    <item>
      <title>seo网站搜索优化</title>
      <link>https://hujian.xyz/posts/seo%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 10 Mar 2022 16:19:04 +0800</pubDate>
      
      <guid>https://hujian.xyz/posts/seo%E4%BC%98%E5%8C%96/</guid>
      <description>1. seo网站搜索优化 搜索排行问题，主要是两方面优化方向：
第一是外链引用 第二是让搜索引擎的爬虫能收录/分析页面中的文本 技术相关的是第二，针对技术上的解决方案:
分析是否指定的浏览器才能展示结果，比如google游览器能正常访问网页，IE游览器访问 404，这样会影响搜索引擎的爬虫对真实内容的爬取，搜索引擎收录到这样的页面，一个相关的词都没有，搜索索引是没法建立的。解决方案是去掉这个判断逻辑。
网站是动态内容，且没有提供sitemap文件。这样的话，意味着即便没有第一个问题，搜索引擎也只会收录到了根页面，其它主页面、各个产品页，是不可能被收录到的，关键词索引也无从建立。解决方案是通过工具自动/手动生成一个根目录sitemap文件，和前端页面一起部署。
在网关title加上name为keywords和description 以及对应的content描述
示例： 1 &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;LoRaWAN,LoRaWAN module,LoRaWAN gateway,LoRaWAN 解决方案&amp;#34;&amp;gt;&amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;....&amp;#34;&amp;gt; 通过Google/百度站点管理工具分析数据，通过此分析 官网相关的关键列表、搜索率、点击率等指标在一定时间范围内的变化，一个是看之前是什么状态，另外一个 要看解决了以上3个问题后，后面有没有得到改进。 2. 解决方案 目的：
提交seo收录，sitemap站点地图,将robots.t文件和sitemap.xml文件放到网站根目录下，示例文件如下: 蜘蛛访问站点权限 robots 站点sitemap地图 sitemap 通过站长工具分析网关排名以及关键字索引 百度站长 google站长 通过模拟器分析网站关键字收录情况 蜘蛛模拟-Screaming Frog SEO Spider 3 参考 seo优化 </description>
    </item>
    
  </channel>
</rss>
